version: 2.1

ruby_image: &ruby_image
  circleci/ruby:3.0-node-browsers-legacy

executors:
  default_executor:
    docker:
      - image: *ruby_image
        environment:
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          TZ: /usr/share/zoneinfo/Asia/Tokyo
          DB_HOST: 127.0.0.1
          SELENIUM_DRIVER_URL: 'http://localhost:4444/wd/hub'
          REDIS: 'redis://localhost:6379'
      - image: circleci/mysql:5.6.44
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: christchurches_map_test
          TZ: /usr/share/zoneinfo/Asia/Tokyo
      - image: selenium/standalone-chrome:3.141.59-zirconium
      - image: circleci/redis:5.0
    working_directory: ~/christchurches-map

jobs:
  build:
    executor: default_executor
    steps:
      - checkout
      - run: bundle -v
      - restore_cache:
          keys:
            - bundle-v2-{{ checksum "Gemfile.lock" }}
            - bundle-v2-
      - run: bundle check || bundle install --clean
      - save_cache:
          key: bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
            - yarn-packages-
      - run:
          name: Yarn install
          command: yarn install --frozen-lockfile
      - save_cache:
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: sudo ln -s libffi
          command: |
            sudo ln -s /usr/lib/x86_64-linux-gnu/libffi.so.7.1.0 /usr/lib/x86_64-linux-gnu/libffi.so.6
      - run:
          name: Database setup
          command: bundle exec rake db:create db:migrate
  test:
    executor: default_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-v2-{{ checksum "Gemfile.lock" }}
            - bundle-v2-
      - run: bundle
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Database setup
          command: bundle exec rake db:create db:migrate
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
            - yarn-packages-
      - run:
          name: Yarn install
          command: yarn install --frozen-lockfile
      - restore_cache:
          keys:
            - webpack-{{ .Revision }}
            - webpack-
      - run:
          name: Compile webpacker assets
          command: bundle exec rails webpacker:compile
      - save_cache:
          key: webpack-{{ .Revision }}
          paths:
            - /home/circleci/christchurches-map/public/packs-test/
      - run:
          name: Run rspec in parallel
          command: |
            COVERALLS_REPO_TOKEN=${COVERALLS_REPO_TOKEN} bundle exec rspec --profile 10 \
              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: test_results
  coveralls:
    executor: default_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-v2-{{ checksum "Gemfile.lock" }}
            - bundle-v2-
      - run: bundle
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Database setup
          command: bundle exec rake db:create db:migrate
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
            - yarn-packages-
      - run:
          name: Yarn install
          command: yarn install --frozen-lockfile
      - restore_cache:
          keys:
            - webpack-{{ .Revision }}
            - webpack-
      - run:
          name: Compile webpacker assets
          command: bundle exec rails webpacker:compile
      - save_cache:
          key: webpack-{{ .Revision }}
          paths:
            - /home/circleci/christchurches-map/public/packs-test/
      - run:
          name: Run rspec in parallel
          command: |
            COVERALLS_REPO_TOKEN=${COVERALLS_REPO_TOKEN} bundle exec rspec --profile 10 \
              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
  deploy_check:
    executor: default_executor
    environment:
      CHRIST_CHURCHES_MAP_SSH_KEY: CHRIST_CHURCHES_MAP_SSH_KEY
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "14:a4:f5:51:a4:70:79:7b:5b:63:d0:d7:e9:24:e2:d7"
      - restore_cache:
          keys:
            - bundle-v2-{{ checksum "Gemfile.lock" }}
            - bundle-v2-
      - run: bundle
      - run:
          name: Deploy Check to AWS
          command: bundle exec cap production deploy:check
  deploy:
    executor: default_executor
    environment:
      CHRIST_CHURCHES_MAP_SSH_KEY: CHRIST_CHURCHES_MAP_SSH_KEY
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "14:a4:f5:51:a4:70:79:7b:5b:63:d0:d7:e9:24:e2:d7"
      - restore_cache:
          keys:
            - bundle-v2-{{ checksum "Gemfile.lock" }}
            - bundle-v2-
      - run: bundle
      - run:
          name: Deploy to AWS
          command: bundle exec cap production deploy
          no_output_timeout: 30m
workflows:
  version: 2
  commit:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master
      - test:
          requires:
            - build
          filters:
            branches:
              ignore:
                - master
      - deploy_check:
          requires:
            - build
            - test
          filters:
            branches:
              ignore:
                - master
  deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
  coverage:
    triggers:
      - schedule:
          cron: "0 23 * * *" # 8:00 (JST) daily
          filters:
            branches:
              only:
                - master
    jobs:
      - coveralls
